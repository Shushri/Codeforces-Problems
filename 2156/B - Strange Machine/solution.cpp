#include <bits/stdc++.h>using namespace std; using ll = long long; void solve() {    int t;    cin >> t;    while (t--) {        int n, q;        cin >> n >> q;        string s;        cin >> s;         vector<ll> arr(q);        for (int i = 0; i < q; i++) cin >> arr[i];         bool hasB = (s.find('B') != string::npos);         for (ll rem : arr) {            if (!hasB) {                cout << rem << "\n";                continue;            }             int i = 0;            ll steps = 0;             while (rem > 0) {                if (s[i] == 'B') {                    rem /= 2;                    steps++;                    i++;                    if (i == n) i = 0;                } else {                    int j = i, cntA = 0;                     while (s[j] == 'A') {                        cntA++;                        j++;                        if (j == n) j = 0;                    }                     if (rem > cntA) {                        rem -= cntA;                        steps += cntA;                        i = j;                    } else {                        steps += rem;                        rem = 0;                        break;                    }                }            }            cout << steps << "\n";        }    }} int main() {    ios::sync_with_stdio(false);    cin.tie(nullptr);    solve();    return 0;}